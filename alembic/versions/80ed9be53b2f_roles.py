"""roles

Revision ID: 80ed9be53b2f
Revises: 7083edfcb34b
Create Date: 2024-12-18 00:16:54.357930

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from config import dispatcher, medic
from db.sqhemas.enums.role import Role

# revision identifiers, used by Alembic.
revision: str = '80ed9be53b2f'
down_revision: Union[str, None] = '7083edfcb34b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('secret_data', 'access_token',
                    existing_type=sa.VARCHAR(),
                    type_=sa.LargeBinary(),
                    postgresql_using='access_token::bytea',
                    existing_nullable=False)
    conn = op.get_bind()

    # Создание ролей
    conn.execute(sa.text(f"CREATE ROLE {medic};"))
    conn.execute(sa.text(f"CREATE ROLE {dispatcher};"))

    # Предоставление привилегий для medic
    conn.execute(sa.text(f"GRANT SELECT ON report TO {medic};"))
    conn.execute(sa.text(f"GRANT SELECT ON call TO {medic};"))
    conn.execute(sa.text(f"GRANT SELECT ON statuscall TO {medic};"))
    conn.execute(sa.text(f"GRANT SELECT, INSERT ON users TO {medic};"))
    conn.execute(sa.text(f"REVOKE ALL ON brigades FROM {medic};"))
    conn.execute(sa.text(f"REVOKE ALL ON cars FROM {medic};"))
    conn.execute(sa.text(f"REVOKE ALL ON compositionsbrigades FROM {medic};"))

    # Предоставление привилегий для dispatcher
    conn.execute(sa.text(f"GRANT SELECT, INSERT, UPDATE ON brigades TO {dispatcher};"))
    conn.execute(sa.text(f"GRANT SELECT, INSERT, UPDATE ON cars TO {dispatcher};"))
    conn.execute(sa.text(f"GRANT SELECT, INSERT ON users TO {dispatcher};"))
    conn.execute(sa.text(f"GRANT SELECT, INSERT ON compositionsbrigades TO {dispatcher};"))
    conn.execute(sa.text(f"REVOKE ALL ON report FROM {dispatcher};"))
    conn.execute(sa.text(f"REVOKE ALL ON call FROM {dispatcher};"))
    conn.execute(sa.text(f"REVOKE ALL ON statuscall FROM {dispatcher};"))

    # Запрет доступа к secret_data
    conn.execute(sa.text(f"REVOKE ALL ON secret_data FROM {medic};"))
    conn.execute(sa.text(f"REVOKE ALL ON secret_data FROM {dispatcher};"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('secret_data', 'access_token',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    conn = op.get_bind()

    # Удаление ролей
    conn.execute(sa.text(f"DROP ROLE IF EXISTS {medic};"))
    conn.execute(sa.text(f"DROP ROLE IF EXISTS {dispatcher};"))

    # ### end Alembic commands ###
